on:
   # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    branches:
        - main
        - branch-*
    tags-ignore:
        - '**'
  pull_request:
    branches: 
        - main
        - branch-*
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
        BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory  # Directorio donde se guardarÃ¡ la salida del build-wrapper
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      - name: Set up python
        uses: actions/setup-python@v5.4.0
        with:
          python-version: '3.x'
          architecture: 'x64'

      - name: Install PlatformIO
        run: python -m pip install platformio==6.1.11 pip-audit

      - name: Build firmwares
        run: FIRMWARE_VERSION=main platformio run

      - name: Comprobar dependencias desactualizadas
        run: pio pkg outdated
        
      - name: Actualizar setuptools
        run: pip install --upgrade setuptools

      - name: Ejecutar Cppcheck en el entorno
        run: cppcheck --enable=all --error-exitcode=0 src/ || true
     
      - name: Install Build Wrapper
        uses: SonarSource/sonarqube-scan-action/install-build-wrapper@v5

      - name: Run Build Wrapper
        run: |
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} pio run --environment esp32thing 

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dproject.settings=sonar-project.properties
            -Dsonar.cfamily.compile-commands="${{ env.BUILD_WRAPPER_OUT_DIR }}/compile_commands.json"