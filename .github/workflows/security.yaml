on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory
    steps:
      # Checkout the repository
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # Set up the environment for the build
      - name: Set up python
        uses: actions/setup-python@v5.4.0

      - name: Instalar Build Wrapper
        uses: SonarSource/sonarqube-scan-action/install-build-wrapper@v5
       

      - name: Install PlatformIO
        run: python -m pip install platformio==6.1.11 pip-audit
        # build the and extract de version from the results
      - name: Build firmwares
        run: FIRMWARE_VERSION=main platformio run

      # donde guardamos los resultados del cppchek?
      # por ahi lo podemos poner como checkeo antes del merge?
      - name: Ejecutar Cppcheck en el entorno
        run: cppcheck --enable=all --error-exitcode=0 src/ || true

      - name: Generate compile_commands.json
        run: pio run -t compiledb
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          # Consult https://docs.sonarsource.com/sonarqube-server/latest/analyzing-source-code/scanners/sonarscanner/ for more information and options
          args: >
            --define sonar.projectKey=Strooom_MuMo-v2-Node-SW \
            --define sonar.organization=strooom-1 \
            --define sonar.coverageReportPaths=coverage.xml

        